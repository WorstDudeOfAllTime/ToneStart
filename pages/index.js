import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import * as Tone from 'tone';
import { useEffect, useState } from 'react';
import Circle from './../components/Circle';
export default function Home() {
  const [innerHeight, setInnerHeight] = useState(null);
  const [innerWidth, setInnerWidth] = useState(null);
  const [synth, setSynth] = useState(null);
  const [synthOne, setSynthOne] = useState(null);
  const [synthTwo, setSynthTwo] = useState(null);
  const [synthThree, setSynthThree] = useState(null);
  const [clicked, setClicked] = useState(false);
  const [noteArray, setNoteArray] = useState(null);
  let theGroup = [
    20, 27, 32, 18, 40, 16, 25, 36, 37, 31, 24, 24, 29, 30, 31, 22, 23, 38, 38,
    17,
  ];
  //E2 is low A5 is high
  let cMaj = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];
  let cMin = ['C', 'D', 'D#', 'F', 'G', 'G#', 'A#'];
  let octaveArray = ['3', '4'];
  let colorArray = [
    'red',
    'blue',
    'green',
    'yellow',
    'purple',
    'white',
    'pink',
    'orange',
  ];
  useEffect(() => {
    setInnerHeight((prevHeight) => {
      return window.innerHeight;
    });
    setInnerWidth((prevWidth) => {
      return window.innerWidth;
    });
  }, [clicked]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {clicked ? (
          <svg style={{ height: '100vh', width: ' 100vw' }}>
            {theGroup
              .map((age) => {
                if (age < 26) {
                  return (
                    <Circle
                      setX={Math.floor(Math.random() * innerWidth)}
                      setY={Math.floor(Math.random() * innerHeight)}
                      theNote={noteArray}
                      innerHeight={innerHeight}
                      innerWidth={innerWidth}
                      size={'25'}
                      octave={'3'}
                      color={colorArray[Math.floor(Math.random() * 7)]}
                      speed={Math.floor(Math.random() * 100)}
                    />
                  );
                } else if (age >= 26 <= 30) {
                  return (
                    <Circle
                      setX={100}
                      setY={100}
                      theNote={noteArray}
                      innerHeight={innerHeight}
                      innerWidth={innerWidth}
                      size={'25'}
                      octave={'4'}
                      color={colorArray[Math.floor(Math.random() * 7)]}
                      speed={Math.floor(Math.random() * 75)}
                    />
                  );
                } else if (age > 30) {
                  return (
                    <Circle
                      setX={100}
                      setY={100}
                      theNote={noteArray}
                      innerHeight={innerHeight}
                      innerWidth={innerWidth}
                      size={'25'}
                      octave={'5'}
                      color={colorArray[Math.floor(Math.random() * 7)]}
                      speed={Math.floor(Math.random() * 50)}
                    />
                  );
                }
              })}
          </svg>
        ) : (
          <>
            <button
              style={{
                height: ' 100px',
                width: '200px',
                borderRadius: '10px',
                fontSize: '15px',
                cursor: 'pointer',
              }}
              onClick={() => {
                setNoteArray(cMaj);
              }}
            >
              Major
            </button>
            <button
              style={{
                height: ' 100px',
                width: '200px',
                borderRadius: '10px',
                fontSize: '15px',
                cursor: 'pointer',
              }}
              onClick={() => {
                setNoteArray(cMin);
              }}
            >
              Minor
            </button>
            <button
              style={{
                height: ' 300px',
                width: '400px',
                borderRadius: '15px',
                fontSize: '50px',
                cursor: 'pointer',
              }}
              onClick={() => {
                if (noteArray === null) {
                  setNoteArray(cMaj);
                }
                setClicked(!clicked);
              }}
            >
              SET IT OFF
            </button>
          </>
        )}
      </main>
    </>
  );
}
